trigger_path  : './working/'
real_or_sim: 'real' #must switch between 'sim' and 'real'
debug: False

sendEmailsToEveryone : False
sendtexts : False

# camera
camera : 'decam'
default_map_name : bayestar.fits

# delete?
probHasRem_threshold: .5
forceProbHasRem: False
probHasRem: 1.

do_make_maps:   True
do_make_hexes:  True
do_make_jsons:  True
do_make_gifs:   True
allSkyGif: True
centeredSkyGif : True

# Optimization params
   # resolution
   # resolution = 256 ;# default, resolution element on order of ccd area size
   # resolution = 128 ;# roughly 4 ccds
   # resolution = 64 ;# very fast, debuging, roughly 1/4 of the camera size
resolution: 64  # what resolution to make all healpix maps. 64, maybe 32 is lowest workable.

   # gif_resolution = 3. pub quality
   # gif_resolution = 1. good to show
   # gif_resolution = 0.1  8-bit resolution-like but tells the story and very fast
gif_resolution: 1.0

# the desgw-map code will calculate the hours availble in the night
# and will report and use the smaller of hoursPerNight and hoursAvailable
hoursAvailable : 24 

# find the apparent_magnitude for which we recover  % of kasen models
kasen_fraction : 50   

# how many days since burst to run at- integers work best
days_since_burst : 0

# set conditions to non-optimal
use_teff : 1.0

# Say you have looked at the *ra-dec-id-prob-mjd-slot-dist.txt file,
# and find that you can reach 30% of total prob by observing 10 hexes, but
# don't gain usefully for the cost after that. Then, set this parameter to 10.
# This will limit the number of hexes going into the *ra-dec-id-prob-* file,
# and hence into the json files
max_number_of_hexes_to_do : 10000
# if you are going to cut back, recall you have to rerun hex generation

# Remnant strategy
exposure_length_bright : [ 90.] #sec
exposure_filter_bright : [ 'g']
exposure_tiling_bright : [ 0,1 ]         # to be interpreted as do all exp in exp_length for each tiling in exp_tiling
maxHexesPerSlot_bright : 15             # maxHexesPerSlot goes down in propotion to how many images per hex, really cumul exp time per hex
# BH strategy
exposure_length_dark : [ 90., ] #sec
exposure_filter_dark : [ 'i', ]
exposure_tiling_dark : [ 0,1 ]
maxHexesPerSlot_dark : 15  # related to maxHexesPerSlot_bright by (90+90+90)/90 for 1/3 less images/hex, so same amount of time

# The idea here is that one can set use_teff to some number and it scales the exposure time- 
# what I'm doing for exposure time is to get the first filter off the filter list, then asking 
# how many exposures of that filter are on the filter list, then summing the exposures for that filter. 
# This allows "g, g, z, z, z, z" sequences. It is the tiling list that controls dithered offsets- 
# so a tiling list of "0," just does what is on the filter list. If it is "[0,1]", then we 
# get the json files that half-fill the time that we need gw_helper to use up.


